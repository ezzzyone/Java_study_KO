<?xml version="1.0" encoding="UTF-8"?>
		<!DOCTYPE mapper
		    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
		    
<mapper namespace="com.ko.home.bankmembers.BankMembersDAO">

	<insert id="setAddFile" parameterType="BankMemberFileDTO">
	insert into memberfile (filenum, oriname, username, filename)
	values(FILE_SEQ.NEXTVAL, #{oriName}, #{userName}, #{fileName})
	</insert>

	<select id="getLogin" parameterType="com.ko.home.bankmembers.BankMembersDTO" resultMap="getLoginResult">
		SELECT M.USERNAME, M.NAME, MR.ROLENUM, R.ROLENAME
		FROM BANKMEMBERS M
    		INNER JOIN
    		MEMBERROLE MR
    		ON M.USERNAME = MR.USERNAME
    		INNER JOIN
    		ROLE R
    		ON MR.ROLENUM = R.ROLENUM
		WHERE M.USERNAME = #{userName} and M.PASSWORD = #{passWord}
		ORDER BY R.ROLENUM ASC
	</select>
	
	<resultMap type="BankMembersDTO" id="getLoginResult">
		<id column="USERNAME" property="userName" />
		<result column="NAME" property="name" />
		<collection property="roleDTOs" javaType="List" ofType="RoleDTO">
			<id column="ROLENUM" property="roleNum" />
			<result column="ROLENAME" property="roleName" />
		</collection>
	</resultMap>
	
	<insert id="setJoin" parameterType="BankMembersDTO">
		INSERT INTO BANKMEMBERS VALUES (#{userName}, #{passWord}, #{name}, #{email}, #{phone})
	</insert>
	
	<select id="getSearchByID" parameterType="String" resultType="BankMembersDTO">
		SELECT * FROM BANKMEMBERS WHERE USERNAME LIKE '%'||#{userName}||'%' ORDER BY USERNAME ASC
	</select>
	
	<select id="getMyPage" parameterType="BankMembersDTO" resultMap="getMyPageResult">
      SELECT BM.USERNAME, NAME, EMAIL, PHONE, FILENAME, FILENUM, ACCOUNTNUM, BOOKNAME, ACCOUNTDATE
      FROM BANKMEMBERS BM
      LEFT JOIN
      MEMBERFILE MF
      ON BM.USERNAME = MF.USERNAME
      
          LEFT JOIN 
          BANKACCOUNT BA
      ON BM.USERNAME = BA.USERNAME
          
          LEFT JOIN
          
          BANKBOOK BB
      ON BA.BOOKNUM = BB.BOOKNUM
          
      WHERE BM.USERNAME=#{userName}
   </select>
   
<!--  1:N 관계에는 collection:한 member가 여러개의 계정과 통장을 가지고있을 수 있음.
      1:1 관계에는 association :한 members는 가입시 넣은 한개의  이미지파일을 가지고있음.-->
   <resultMap type="BankMembersDTO" id="getMyPageResult">
      <id column="USERNAME" property="userName"/>
      <result column="NAME" property="name"/>
      <result column="EMAIL" property="email"/>
      <result column="PHONE" property="phone"/>
      
      <association property="bankMemberFileDTO" javaType="BankMemberFileDTO">
      <result column="FILENAME" property="fileName"/>
      <result column="FILENUM" property="fileNum"/>
      </association>
      
      <collection property="bankAccountDTO" javaType="List" ofType="BankAccountDTO">
         <id column="ACCOUNTNUM" property="accountNum"/>
         <result column="ACCOUNTDATE" property="accountDate"/>
         <association property="bankBookDTO" javaType="BankBookDTO">
            <result column="BOOKNAME" property="bookName"/>
         </association>
      </collection>
      
   </resultMap>
   
</mapper>